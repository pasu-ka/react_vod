{
  parser: "babel-eslint",
  extends: "eslint:recommended",
  env: {
    browser: true,
    es6: true,
    node: true
  },
  globals: {
    module: true,
    require: true
  },
  rules: {
    "no-console": 0,
    "semi": 2,
    "object-curly-spacing": [2, "always"],
    "indent": [2, 2, {SwitchCase: 1}],

    "react/display-name": 0, // Prevent missing displayName in a React component definition
    "react/forbid-component-props": 0, // Forbid certain props on Components
    "react/forbid-prop-types": 0, // Forbid certain propTypes
    "react/jsx-boolean-value": 0, // Enforce boolean attributes notation in JSX (fixable)
    "react/jsx-closing-bracket-location": 0, // Validate closing bracket location in JSX (fixable)
    "react/jsx-curly-spacing": 1, // Enforce or disallow spaces inside of curly braces in JSX attributes (fixable)
    "react/jsx-equals-spacing": 1, // Enforce or disallow spaces around equal signs in JSX attributes (fixable)
    "react/jsx-filename-extension": 0, // Restrict file extensions that may contain JSX
    "react/jsx-first-prop-new-line": 0, // Enforce position of the first prop in JSX (fixable)
    "react/jsx-handler-names": 0, // Enforce event handler naming conventions in JSX
    "react/jsx-indent": 0, // Validate JSX indentation
    "react/jsx-indent-props": 0, // Validate props indentation in JSX (fixable)
    "react/jsx-key": 2, // Validate JSX has key prop when in array or iterator
    "react/jsx-max-props-per-line": 0, // Limit maximum of props on a single line in JSX
    "react/jsx-no-bind": 0, // Prevent usage of .bind() and arrow functions in JSX props
    "react/jsx-no-comment-textnodes": 0, // Prevent comments from being inserted as text nodes
    "react/jsx-no-duplicate-props": 0, // Prevent duplicate props in JSX
    "react/jsx-no-literals": 0, // Prevent usage of unwrapped JSX strings
    "react/jsx-no-target-blank": 0, // Prevent usage of unsafe target='_blank'
    "react/jsx-no-undef": 0, // Disallow undeclared variables in JSX
    "react/jsx-pascal-case": 2, // Enforce PascalCase for user-defined JSX components
    "react/jsx-sort-props": 0, // Enforce props alphabetical sorting
    "react/jsx-space-before-closing": 0, // Validate spacing before closing bracket in JSX (fixable)
    "react/jsx-tag-spacing": 0, // Validate whitespace in and around the JSX opening and closing brackets (fixable)
    "react/jsx-uses-react": 1, // Prevent React to be incorrectly marked as unused
    "react/jsx-uses-vars": 1, // Prevent variables used in JSX to be incorrectly marked as unused
    "react/jsx-wrap-multilines": 0, // Prevent missing parentheses around multilines JSX (fixable)
    "react/no-children-prop": 0, // Prevent passing children as props
    "react/no-danger": 2, // Prevent usage of dangerous JSX properties
    "react/no-danger-with-children": 0, // Prevent problem with children and props.dangerouslySetInnerHTML
    "react/no-deprecated": 0, // Prevent usage of deprecated methods
    "react/no-did-mount-set-state": 0, // Prevent usage of setState in componentDidMount
    "react/no-did-update-set-state": 0, // Prevent usage of setState in componentDidUpdate
    "react/no-direct-mutation-state": 0, // Prevent direct mutation of this.state
    "react/no-find-dom-node": 0, // Prevent usage of findDOMNode
    "react/no-is-mounted": 0, // Prevent usage of isMounted
    "react/no-multi-comp": 0, // Prevent multiple component definition per file
    "react/no-render-return-value": 0, // Prevent usage of the return value of React.render
    "react/no-set-state": 0, // Prevent usage of setState
    "react/no-string-refs": 0, // Prevent using string references in ref attribute.
    "react/no-unescaped-entities": 0, // Prevent invalid characters from appearing in markup
    "react/no-unknown-property": 0, // Prevent usage of unknown DOM property (fixable)
    "react/no-unused-prop-types": 0, // Prevent definitions of unused prop types
    "react/prefer-es6-class": 2, // Enforce ES5 or ES6 class for React Components
    "react/prefer-stateless-function": 1, // Enforce stateless React Components to be written as a pure function
    "react/prop-types": 0, // Prevent missing props validation in a React component definition
    "react/react-in-jsx-scope": 2, // Prevent missing React when using JSX
    "react/require-extension": 0, // Restrict file extensions that may be required
    "react/require-optimization": 0, // Enforce React components to have a shouldComponentUpdate method
    "react/require-render-return": 2, // Enforce ES5 or ES6 class for returning value in render function
    "react/self-closing-comp": 0, // Prevent extra closing tags for components without children (fixable)
    "react/sort-comp": 0, // Enforce component methods order
    "react/sort-prop-types": 0, // Enforce propTypes declarations alphabetical sorting
    "react/style-prop-object": 0, // Enforce style prop value being an object

    "import/default": 0, // Ensure a default export is present, given a default import.
    "import/export": 2, // Report any invalid exports, i.e. re-export of the same name
    "import/extensions": 0, // Ensure consistent use of file extension within the import path
    "import/first": 0, // Ensure all imports appear before other statements
    "import/imports-first": 0, // Ensure all imports appear before other statements
    "import/max-dependencies": 0, // Limit the maximum number of dependencies a module can have
    "import/named": 2, // Ensure named imports correspond to a named export in the remote file.
    "import/namespace": 0, // Ensure imported namespaces contain dereferenced properties as they are dereferenced.
    "import/newline-after-import": 0, // Enforce a newline after import statements
    "import/no-absolute-path": 0, // Forbid import of modules using absolute paths
    "import/no-amd": 0, // Report AMD require and define calls.
    "import/no-commonjs": 0, // Report CommonJS require calls and module.exports or exports.*.
    "import/no-deprecated": 2, // Report imported names marked with @deprecated documentation tag
    "import/no-duplicates": 0, // Report repeated import of the same module in multiple places
    "import/no-dynamic-require": 0, // Forbid require() calls with expressions
    "import/no-extraneous-dependencies": 0, // Forbid the use of extraneous packages
    "import/no-internal-modules": 0, // Prevent importing the submodules of other modules
    "import/no-mutable-exports": 2, // Forbid the use of mutable exports with var or let.
    "import/no-named-as-default": 0, // Report use of exported name as identifier of default export
    "import/no-named-as-default-member": 0, // Report use of exported name as property of default export
    "import/no-named-default": 0, // Forbid named default exports
    "import/no-namespace": 0, // Report namespace imports
    "import/no-nodejs-modules": 0, // No Node.js builtin modules.
    "import/no-restricted-paths": 0, // Restrict which files can be imported in a given folder
    "import/no-unassigned-import": 0, // Forbid unassigned imports
    "import/no-unresolved": 0, // Ensure imports point to a file/module that can be resolved.
    "import/no-webpack-loader-syntax": 0, // Forbid Webpack loader syntax in imports
    "import/order": 0, // Enforce a convention in module import order
    "import/prefer-default-export": 0, // Prefer a default export if module exports a single name
    "import/unambiguous": 0, // Report potentially ambiguous parse goal (script vs. module)
  },
  plugins: [
    "react",
    "import",
  ]
}


